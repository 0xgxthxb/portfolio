@use '~@angular/material' as mat;

@include mat.core();

// Define a light theme
$light-primary: mat.define-palette(mat.$indigo-palette);
$light-accent: mat.define-palette(mat.$pink-palette);
$light-theme: mat.define-light-theme(
  (
    color: (
      primary: $light-primary,
      accent: $light-accent,
    ),
  )
);

// Define a dark theme
$dark-primary: mat.define-palette(mat.$pink-palette);
$dark-accent: mat.define-palette(mat.$blue-gray-palette);
$dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $dark-primary,
      accent: $dark-accent,
    ),
  )
);

// Apply the dark theme by default
@include mat.core-theme($dark-theme);
@include mat.button-theme($dark-theme);

// Apply the light theme only when the `.my-light-theme` CSS class is applied
// to an ancestor element of the components (such as `body`).
.my-light-theme {
  @include mat.core-color($light-theme);
  @include mat.button-color($light-theme);
}
// @use '~@angular/material' as mat;

// @include mat.core();

// // Define a light theme
// $primary: mat.define-palette(mat.$indigo-palette);
// $accent: mat.define-palette(mat.$pink-palette);

// $typography: mat.define-typography-config(
//   $font-family: "Montserrat",
//   $display-4: mat.define-typography-level(112px, 112px, 300, "Open Sans"),
//   $display-3: mat.define-typography-level(56px, 56px, 400, "Open Sans"),
//   $headline: mat.define-typography-level(24px, 32px, 400, "Open Sans"),
//   $title: mat.define-typography-level(20px, 32px, 500, "Open Sans"),
//   $subheading-2: mat.define-typography-level(16px, 28px, 400, "Open Sans"),
//   $subheading-1: mat.define-typography-level(15px, 24px, 400, "Open Sans"),
// );

// $light-theme: mat.define-light-theme(
//   (
//     color: (
//       primary: $primary,
//       accent: $accent,
//     ),
//     typography: $typography,
//   )
// );

// // Define a dark theme
// $dark-theme: mat.define-dark-theme(
//   (
//     color: (
//       primary: $primary,
//       accent: $accent,
//     ),
//     typography: $typography,
//   )
// );

// // @include mat.core($light-theme);

// :root {
//   color-scheme: light;
//   --p-color: #424242;
//   --a-color: #212121;
// }

// .github-corner {
//   fill: #303030;
//   color: #fff;
// }

// .bike {
//   fill: #303030;
// }

// #resume {
//   background: white;
// }
// app-resume {
//   background: #f5f5f5;
// }

// @media (prefers-color-scheme: dark) {
//   @include mat.core-theme($dark-theme);
//   @include mat.button-theme($dark-theme);
//   // @include mat.core($dark-theme);
//   :root {
//     color-scheme: dark;
//     --p-color: white;
//     --a-color: white;
//   }
//   .github-corner {
//     fill: #fff;
//     color: #303030;
//   }

//   .bike {
//     fill: white;
//   }

//   #resume {
//     background: #303030;
//   }
//   app-resume {
//     background: #1f1f1f;
//   }
// }

// a {
//   // color: inherit;
//   text-decoration: none;
//   font-weight: 500;
// }

// p {
//   color: var(--p-color);
// }

// #resume {
//   #side-header {
//     background: mat.get-color-from-palette($primary, 600);
//     color: white;
//   }

//   #side {
//     background: mat.get-color-from-palette($primary, 500);
//     color: white;
//   }
// }

// .primary-light {
//   color: mat.get-color-from-palette($primary, 200);
// }

// .accent-light {
//   color: mat.get-color-from-palette($accent, 200);
// }
